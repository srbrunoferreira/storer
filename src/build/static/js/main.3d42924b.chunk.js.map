{"version":3,"sources":["helpers/helpers.js","components/Text.js","components/Task.js","components/TaskInput.js","components/TaskEdit.js","components/TasksList.js","App.js","index.js"],"names":["formatTaskDate","date","formatedDate","split","substr","useStyles","makeStyles","theme","text","color","display","Text","props","style","fontWeight","bold","size","classes","className","fontSize","createdAt","marginTop","iconsContainer","justifyContent","icon","transition","cursor","Task","tasks","deleteTaskFunc","showUpdateTaskView","map","task","index","ListItem","taskContainer","divider","ListItemText","disableTypography","primary","length","secondary","ListItemIcon","Delete","onClick","_id","Edit","status","container","width","backgroundColor","padding","boxShadow","borderRadius","input","border","height","outline","img","margin","TaskInput","addTaskFunc","textInput","React","createRef","handleInput","taskText","current","value","Grid","alignItems","ref","onKeyPress","event","key","type","maxLength","placeholder","src","wrapper","position","top","left","minHeight","transform","paddingRight","paddingLeft","icons","TaskEdit","id","setShowEdit","updateTask","useState","newText","setNewText","direction","item","Save","titleAccess","marginRight","htmlColor","Close","TextField","label","variant","onChange","target","multiline","maxRows","minRows","tasksList","overflowY","flexDirection","maxHeight","baseUrl","TasksList","setTasksCount","setTasks","showUpdateTask","setShowUpdateTask","editingTask","setEditingTask","taskListRef","useRef","useEffect","a","axios","then","res","data","Box","List","taskId","method","url","filter","newTask","Date","toISOString","headers","catch","err","console","log","forEach","subContainer","textAlign","white","contentWrapper","header","App","tasksCount","xs","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d42924b.chunk.js","sourcesContent":["'use strict'\r\n\r\nexport const getIsoDate = () => {\r\n  return new Date().toISOString()\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} date a date in the ISO format.\r\n * @returns {string} a date in the MM/YY format.\r\n */\r\nexport const formatTaskDate = (date) => {\r\n  const formatedDate = date.split('T')[0].split('-')\r\n\r\n  return formatedDate[2] + '.' + formatedDate[1] + '.' + formatedDate[0].substr(2)\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    color: '#040111',\r\n    display: 'inline'\r\n  }\r\n}))\r\n\r\nconst Text = (props) => {\r\n  const style = useStyles()\r\n  const fontWeight = props.bold === true ? '700' : '400'\r\n  let size = ''\r\n\r\n  switch (props.size) {\r\n    case 'sm':\r\n      size = '0.78em'\r\n      break\r\n    case 'lg':\r\n      size = '1.5em'\r\n      break\r\n    default:\r\n      size = '0.95em'\r\n      break\r\n  }\r\n\r\n  const classes = style.text + ' ' + props.className\r\n\r\n  return (\r\n    <p className={classes} style={{ fontSize: size, fontWeight: fontWeight }}>{props.text}</p>\r\n  )\r\n}\r\n\r\nText.propTypes = {\r\n  className: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n  size: PropTypes.string,\r\n  bold: PropTypes.bool\r\n}\r\n\r\nexport default Text\r\n","import React from 'react'\r\nimport { ListItem, ListItemText, ListItemIcon } from '@material-ui/core'\r\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@material-ui/icons'\r\nimport { PropTypes } from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { formatTaskDate } from '../helpers/helpers'\r\nimport Text from './Text'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    color: '#040111',\r\n    fontSize: '0.92em'\r\n  },\r\n  createdAt: {\r\n    display: 'block',\r\n    marginTop: '8px'\r\n  },\r\n  iconsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around'\r\n  },\r\n  icon: {\r\n    color: '#D2D2D2',\r\n    fontSize: '21px',\r\n    transition: 'color 0.2s ease',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      color: '#969696'\r\n    }\r\n  }\r\n}))\r\n\r\nconst Task = ({ tasks, deleteTaskFunc, showUpdateTaskView }) => {\r\n  const style = useStyles()\r\n\r\n  return tasks.map((task, index) => (\r\n    <ListItem className={style.taskContainer} key={index} divider>\r\n      <ListItemText\r\n        className={style.text}\r\n        disableTypography\r\n        primary={task.text.length > 120 ? task.text.substr(0, 120) + '...' : task.text}\r\n        secondary={<Text className={style.createdAt} text={formatTaskDate(task.createdAt)}/>}\r\n      />\r\n      <ListItemIcon className={style.iconsContainer}>\r\n        <DeleteIcon className={style.icon} onClick={() => deleteTaskFunc(task._id)} />\r\n        <EditIcon className={style.icon} onClick={() => showUpdateTaskView(task._id, task.status, task.text)} />\r\n      </ListItemIcon>\r\n    </ListItem>\r\n  ))\r\n}\r\n\r\nTask.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n  deleteTaskFunc: PropTypes.func.isRequired,\r\n  showUpdateTaskView: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    width: '100%',\r\n    backgroundColor: '#EFEFEF',\r\n    padding: '6px',\r\n    boxShadow: '0px 4px 4px 0px rgba(0, 0, 0, 0.25)',\r\n    borderRadius: '3px',\r\n    transition: 'all 0.3s cubic-bezier(.25,.8,.25,1)',\r\n    '&:hover': {\r\n      boxShadow: '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)'\r\n    }\r\n  },\r\n  input: {\r\n    backgroundColor: '#DADADD',\r\n    border: 'none',\r\n    width: '90%',\r\n    height: '35px',\r\n    fontSize: '0.8em',\r\n    padding: '5px',\r\n    borderRadius: '3px',\r\n    outline: 'none'\r\n  },\r\n  img: {\r\n    width: '28px',\r\n    margin: '0 auto 0',\r\n    cursor: 'pointer'\r\n  }\r\n}))\r\n\r\nconst TaskInput = ({ addTaskFunc }) => {\r\n  const style = useStyles()\r\n  const textInput = React.createRef()\r\n\r\n  function handleInput () {\r\n    const taskText = textInput.current.value\r\n    if (!taskText.length > 0) { return }\r\n    addTaskFunc(taskText)\r\n    textInput.current.value = ''\r\n  }\r\n\r\n  const handleKeyPress = (event) => { if (event.key === 'Enter') handleInput() }\r\n\r\n  return (\r\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\" className={style.container}>\r\n      <input className={style.input} ref={textInput} onKeyPress={handleKeyPress} type=\"text\" maxLength=\"255\" placeholder=\"Adicionar novo item\" />\r\n      <img onClick={handleInput} src=\"/send.svg\" className={style.img} />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nTaskInput.propTypes = {\r\n  addTaskFunc: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TaskInput\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Grid, TextField } from '@material-ui/core'\r\nimport { PropTypes } from 'prop-types'\r\nimport { Close as CloseIcon, Save as SaveIcon } from '@material-ui/icons'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    width: '320px',\r\n    minHeight: '300px',\r\n    padding: '10px',\r\n    transform: 'translate(-50%,-50%)',\r\n    backgroundColor: 'white',\r\n    borderRadius: '3px',\r\n    paddingRight: '30px',\r\n    paddingLeft: '30px',\r\n    boxShadow: '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)'\r\n  },\r\n  icons: {\r\n    cursor: 'pointer'\r\n  }\r\n}))\r\n\r\nconst TaskEdit = ({ id, status, text, setShowEdit, updateTask }) => {\r\n  const style = useStyles()\r\n  const [newText, setNewText] = useState(text)\r\n\r\n  return (\r\n    <Grid\r\n      className={style.wrapper}\r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"space-around\"\r\n      alignItems=\"flex-start\"\r\n    >\r\n      <Grid\r\n        container item\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <h2>Editar task</h2>\r\n        <Grid item>\r\n          <SaveIcon className={style.icons} titleAccess=\"Salvar\" style={{ marginRight: '5px' }} onClick={() => updateTask(id, status, newText)} htmlColor=\"#6b58f3\" />\r\n          <CloseIcon className={style.icons} titleAccess=\"Fechar\" onClick={() => setShowEdit(false)} htmlColor=\"#6b58f3\" />\r\n        </Grid>\r\n      </Grid>\r\n      <TextField\r\n        label=\"Editar texto\"\r\n        variant=\"standard\"\r\n        onChange={(event) => setNewText(event.target.value)}\r\n        value={newText}\r\n        multiline\r\n        maxRows={5}\r\n        minRows={5}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nTaskEdit.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  status: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  setShowEdit: PropTypes.func.isRequired,\r\n  updateTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TaskEdit\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Box, List } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Task from './Task'\r\nimport TaskInput from './TaskInput'\r\nimport axios from 'axios'\r\nimport { getIsoDate } from '../helpers/helpers'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nimport FadeIn from 'react-fade-in'\r\n\r\nimport TaskEdit from './TaskEdit'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    width: '100%',\r\n    height: '440px',\r\n    backgroundColor: '#EFEFEF',\r\n    padding: '15px',\r\n    marginTop: '15px',\r\n    borderRadius: '3px'\r\n  },\r\n  tasksList: {\r\n    overflowY: 'scroll',\r\n    display: 'flex',\r\n    flexDirection: 'column-reverse',\r\n    minHeight: '100%',\r\n    maxHeight: '100%',\r\n    paddingRight: '20px'\r\n  }\r\n}))\r\n\r\nconst baseUrl = 'https://dev-bruno-ferreira-storer.herokuapp.com:3000/tasks/'\r\n\r\nconst TasksList = ({ setTasksCount }) => {\r\n  const style = useStyles()\r\n  const [tasks, setTasks] = useState([])\r\n  const [showUpdateTask, setShowUpdateTask] = useState(false)\r\n  const [editingTask, setEditingTask] = useState({})\r\n  const taskListRef = useRef()\r\n\r\n  useEffect(() =>\r\n    (async () => {\r\n      await axios(baseUrl)\r\n        .then(res => {\r\n          setTasks(res.data.tasks)\r\n          setTasksCount(res.data.tasks.length)\r\n        })\r\n    })()\r\n  , [])\r\n\r\n  const addTask = (taskText) => {\r\n    if (taskText.length === 0) { console.log('O input deve ser preenchido.'); return }\r\n\r\n    const newTask = { status: 'done', text: taskText, createdAt: getIsoDate() }\r\n\r\n    axios({\r\n      method: 'POST',\r\n      url: baseUrl,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: newTask\r\n    })\r\n      .then(res => {\r\n        newTask._id = res.data.id\r\n        setTasks([...tasks, newTask])\r\n        setTasksCount(tasks.length + 1)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  const deleteTask = (taskId) => {\r\n    axios({\r\n      method: 'DELETE',\r\n      url: baseUrl + taskId\r\n    })\r\n      .then(() => {\r\n        setTasks([...tasks].filter(task => task._id !== taskId))\r\n        setTasksCount(tasks.length - 1)\r\n      })\r\n  }\r\n\r\n  const showUpdateTaskView = (id, status, text) => {\r\n    setShowUpdateTask(true)\r\n    setEditingTask({ id: id, status: status, text: text })\r\n  }\r\n\r\n  const updateTask = (id, status, text) => {\r\n    setShowUpdateTask(false)\r\n    axios({\r\n      method: 'PUT',\r\n      url: baseUrl + id,\r\n      data: { status: status, text: text }\r\n    })\r\n      .then(() => {\r\n        tasks.forEach((task, index) => {\r\n          if (task._id === id) {\r\n            tasks[index].text = text\r\n            tasks[index].status = status\r\n\r\n            setTasks([...tasks])\r\n          }\r\n        })\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box className={style.container}>\r\n        <List className={style.tasksList} ref={taskListRef}>\r\n          <FadeIn>\r\n            <Task tasks={tasks} deleteTaskFunc={deleteTask} showUpdateTaskView={showUpdateTaskView} />\r\n          </FadeIn>\r\n        </List>\r\n      </Box>\r\n      <TaskInput addTaskFunc={addTask} />\r\n      {\r\n        showUpdateTask &&\r\n        <TaskEdit {...editingTask} setShowEdit={setShowUpdateTask} updateTask={updateTask} />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nTasksList.propTypes = {\r\n  setTasksCount: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TasksList\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Box } from '@material-ui/core'\r\n\r\nimport './App.css'\r\nimport TasksList from './components/TasksList'\r\nimport Text from './components/Text'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    backgroundColor: '#040111',\r\n    height: '100vh',\r\n    padding: '15px'\r\n  },\r\n  subContainer: {\r\n    textAlign: 'center'\r\n  },\r\n  white: {\r\n    color: 'white'\r\n  },\r\n  contentWrapper: {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.92)',\r\n    borderRadius: '3px',\r\n    padding: '15px',\r\n    textAlign: 'left'\r\n  },\r\n  header: {\r\n    width: '100%',\r\n    backgroundColor: '#EFEFEF',\r\n    padding: '15px'\r\n  }\r\n}))\r\n\r\nfunction App () {\r\n  const classes = useStyles()\r\n  const [tasksCount, setTasksCount] = useState(0)\r\n\r\n  return (\r\n    <Grid\r\n      className={classes.container}\r\n      container\r\n      justifyContent=\"space-around\"\r\n      alignItems=\"center\"\r\n    >\r\n\r\n      <Grid className={classes.subContainer} item xs>\r\n        <img src=\"/logo.svg\" width=\"190px\" />\r\n      </Grid>\r\n\r\n      <Grid className={classes.subContainer} item xs>\r\n\r\n        <Box id=\"content-wrapper\" className={classes.contentWrapper}>\r\n          <Box className={classes.header}>\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n              <Box>\r\n                <Text text=\"Olá, \" size=\"lg\" />\r\n                <Text text=\"Bruno\" bold size=\"lg\" />\r\n              </Box>\r\n              <Text text={(tasksCount ?? '*') + ' Tasks'} size=\"sm\" />\r\n            </Grid>\r\n          </Box>\r\n\r\n          <TasksList setTasksCount={setTasksCount} />\r\n        </Box>\r\n\r\n      </Grid>\r\n\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}